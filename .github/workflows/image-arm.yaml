---
name: 'ARM build'

on: 
 push:
   branches:
     - master
 pull_request:

concurrency:
  group: ci-arm-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # OIDC support
    strategy:
      fail-fast: false
      matrix:
        imagerepo: ["ghcr.io/jtcressy-home"]
        osid: ["tailos"]
        include:
          - flavor: "opensuse-arm-rpi"
            model: rpi64
          - flavor: "alpine-arm-rpi"
            model: rpi64
    steps:
      - name: Release space from worker
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Login to GHCR
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Build  ðŸ”§
        env:
          FLAVOR: ${{ matrix.flavor }}
          MODEL: ${{ matrix.model }}
        run: |
          ./earthly.sh +all-arm --IMAGE_NAME=${{ matrix.osid }}-$FLAVOR-latest.img --IMAGE=${{ matrix.imagerepo }}/${{ matrix.osid }}-core-$FLAVOR:latest --MODEL=$MODEL --FLAVOR=$FLAVOR
      - name: Push  ðŸ”§
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        env:
          FLAVOR: ${{ matrix.flavor }}
          IMAGE: ${{ matrix.imagerepo }}/${{ matrix.osid }}-core-$FLAVOR:latest
          MODEL: ${{ matrix.model }}
        run: |
          export TAG=latest
          export IMAGE_NAME=${{ matrix.osid }}-$FLAVOR-$TAG.img
          export IMAGE=${{ matrix.imagerepo }}/${{ matrix.osid }}-core-$FLAVOR:$TAG
          docker push ${{ matrix.imagerepo }}/${{ matrix.osid }}-core-$FLAVOR:$TAG
#      - name: Sign image
#        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
#        env:
#          COSIGN_EXPERIMENTAL: 1
#          FLAVOR: ${{ matrix.flavor }}
#        run: |
#          TAG=latest
#          cosign sign ${{ matrix.imagerepo }}/${{ matrix.osid }}-core-$FLAVOR:$TAG
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.flavor }}-image
          path: build
          if-no-files-found: error
